cmake_minimum_required(VERSION 3.16)

project(LinuxScoringEngine)
set (imsc_VERSION_MAJOR 0)
set (imsc_VERSION_MINOR 1)
set (imsc_VERSION_PATCH 0)
set (imsc_VERSION "${imsc_VERSION_MAJOR}.${imsc_VERSION_MINOR}.${imsc_VERSION_PATCH}")

if (NOT IMSC_SECRET)
    message("Using default secret")
    set(IMSC_SECRET "random_str_3A3090C18841B3B619341230")
endif()
if (NOT IMSC_USER)
    message(FATAL_ERROR "Please specify default username")
endif()
if (NOT IMSC_CONFIG_FILE)
    message("Using default config path")
    set(IMSC_CONFIG_FILE "/etc/imsc.1.dat")
endif()
if (NOT IMSC_CHECKLIST_FILE)
    message("Using default checklist path")
    set(IMSC_CHECKLIST_FILE "/etc/imsc.2.dat")
endif()
if (NOT IMSC_LAST_REPORT_FILE)
    message("Using default last report path")
    set(IMSC_LAST_REPORT_FILE "/etc/imsc.3.dat")
endif()
if (NOT IMSC_URL)
    message(FATAL_ERROR "Please specify imsc server URL")
endif()
if (NOT IMSC_SCORING_INTVL_MINS)
    message("Using default scoring interval")
    set(IMSC_SCORING_INTVL_MINS 2)
endif()

message("** Secret:           ********")
message("** Default user:     ${IMSC_USER}")
message("** Config path:      ${IMSC_CONFIG_FILE}")
message("** Checklist path:   ${IMSC_CHECKLIST_FILE}")
message("** Last report path: ${IMSC_LAST_REPORT_FILE}")
message("** imsc Server URL:  ${IMSC_URL}")
message("** Scoring interval: ${IMSC_SCORING_INTVL_MINS} minutes")

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/config.h.in
    ${CMAKE_CURRENT_SOURCE_DIR}/include/config.h @ONLY)

# to prevent caching
unset(IMSC_SECRET)
unset(IMSC_USER)
unset(IMSC_CONFIG_FILE)
unset(IMSC_CHECKLIST_FILE)
unset(IMSC_LAST_REPORT_FILE)
unset(IMSC_URL)
unset(IMSC_SCORING_INTVL_MINS)

set(Boost_USE_STATIC_LIBS OFF) 
set(Boost_USE_MULTITHREADED ON)  
set(Boost_USE_STATIC_RUNTIME OFF) 

find_package(Boost 1.71.0 COMPONENTS program_options REQUIRED)
find_package(PkgConfig REQUIRED)
pkg_check_modules (GTK2 REQUIRED gtk+-2.0)


link_directories(${GTK2_LIBRARY_DIRS})
add_definitions(${GTK2_CFLAGS_OTHER})

include_directories(/usr/include/glib-2.0)
include_directories(include)
include_directories(${GTK2_INCLUDE_DIRS})

file(GLOB_RECURSE SOURCES src/*.cpp)
file(GLOB_RECURSE HEADERS include/*.h)

include_directories(${Boost_INCLUDE_DIRS}) 
add_executable(imsc ${SOURCES} ${HEADERS}) 
target_link_libraries(imsc ${Boost_LIBRARIES} curlpp curl crypto++ notify ${GTK2_LIBRARIES})
target_compile_features(imsc PRIVATE cxx_std_17)
